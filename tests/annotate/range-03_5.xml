<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<vardef sym='r0'>
<type>
<ty:type nm='lang|Range'>
<ty:gen>
<ty:ref nm='lang|Int32'>
</ty:ref>
</ty:gen>
</ty:type>
</type>
<init>
<apply  ty='lang|Range&lt;lang|Int32>'>
<symbol  ty='lambda(lang|Range&lt;&apos;T>, &apos;T, &apos;T, &apos;T):lang|Range&lt;&apos;T>' refer='function'>lang|Range|init</symbol>
<args>
<apply  ty='lang|Range&lt;lang|Int32>'>
<symbol  ty='lambda(lang|Class&lt;&apos;T>):&apos;T' refer='generic'>lang|allocate</symbol>
<args>
<type  ty='lang|Class&lt;lang|Range&lt;lang|Int32>>'/>
</args>
</apply>
<int ty='lang|Int32'>5</int>
<int ty='lang|Int32'>6</int>
<int ty='lang|Int32'>7</int>
</args>
</apply>
</init>
</vardef>
</def>
<ty:node-types>
<ty:used-type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Range'>
<ty:gen>
<ty:ref nm='lang|Int32'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos' spec='t'>
<ty:ref nm='lang|Class'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:ret>
</ty:fun>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Class'>
<ty:gen>
<ty:type nm='lang|Range'>
<ty:gen>
<ty:ref nm='lang|Int32'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:gen>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos'>
<ty:ref nm='lang|Range'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:prm>
<ty:prm is='pos'>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:prm>
<ty:prm is='pos'>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:prm>
<ty:prm is='pos'>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:ref nm='lang|Range'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:ret>
</ty:fun>
</ty:used-type>
</ty:node-types>
</compile-unit>
