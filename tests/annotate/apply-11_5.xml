<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<func sym='to-string' abstract='true'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
</func>
</def>
<def>
<func sym='to-keyw' abstract='true'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Keyword'>
</ty:type>
</rettype>
</func>
</def>
<def>
<func sym='foo'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<block>
<if  ty='lang|Any'>
<test>
<binary op='>' ty='lang|Bool'>
<symbol  ty='lang|Int32' refer='param'>a</symbol>
<int ty='lang|Int32'>0</int>
</binary>
</test>
<then>
<apply  ty='lang|String'>
<symbol  ty='lambda(lang|Int32):lang|String' refer='function'>to-string</symbol>
<args>
<symbol  ty='lang|Int32' refer='param'>a</symbol>
</args>
</apply>
</then>
<else>
<apply  ty='lang|Keyword'>
<symbol  ty='lambda(lang|Int32):lang|Keyword' refer='function'>to-keyw</symbol>
<args>
<symbol  ty='lang|Int32' refer='param'>a</symbol>
</args>
</apply>
</else>
</if>
<real ty='lang|Float32'>1.234500</real>
</block>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:ref nm='lang|Any'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Keyword'>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos'>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:ret>
</ty:fun>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos'>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:type nm='lang|Keyword'>
</ty:type>
</ty:ret>
</ty:fun>
</ty:used-type>
</ty:node-types>
</compile-unit>
