<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<func sym='h'>
<rettype>
<ty:ref gen='t' nm='E'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='x'>
<type>
<ty:array ind='0'>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:array>
</type>
</vardef>
</let>
<let>
<vardef sym='y'>
<type>
<ty:array ind='5'>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:array>
</type>
</vardef>
</let>
<apply  ty='&apos;E'>
<symbol  ty='lambda(lang|Sliceable&lt;&apos;K, &apos;E>, &apos;K):&apos;E'>lang|slice</symbol>
<args>
<apply  ty='lang|Int'>
<symbol  ty='lambda(lang|Sliceable&lt;&apos;K, &apos;E>, &apos;K):&apos;E'>lang|slice</symbol>
<args>
<symbol  ty='lang|Int[]'>y</symbol>
<int ty='lang|Int'>34</int>
</args>
</apply>
<int ty='lang|Int'>2</int>
</args>
</apply>
</block>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:ref gen='t' nm='E'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:array ind='5'>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:array>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos' spec='t'>
<ty:ref nm='lang|Sliceable'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='E'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:prm>
<ty:prm is='pos' spec='t'>
<ty:ref gen='t' nm='K'>
</ty:ref>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:ref gen='t' nm='E'>
</ty:ref>
</ty:ret>
</ty:fun>
</ty:used-type>
</ty:node-types>
</compile-unit>
