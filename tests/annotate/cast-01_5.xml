<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<func sym='foo'>
<params>
<param sym='a' type='pos'>
<type>
<ty:ref nm='lang|Any'>
</ty:ref>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<block>
<let>
<vardef sym='t'>
<type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<cast>
<base>
<symbol  ty='lang|Any' refer='param'>a</symbol>
</base>
<as>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</as>
</cast>
</init>
</vardef>
</let>
<symbol  ty='lang|Int32' refer='local'>t</symbol>
</block>
</body>
</func>
</def>
<def>
<func sym='bar'>
<params>
<param sym='b' type='pos'>
<type>
<ty:type nm='lang|Number'>
<ty:isa>
<ty:ref nm='lang|Object'>
</ty:ref>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<cast>
<base>
<symbol  ty='lang|Number' refer='param'>b</symbol>
</base>
<as>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</as>
</cast>
</body>
</func>
</def>
<def>
<func sym='bar2'>
<params>
<param sym='b' type='pos'>
<type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Number'>
<ty:isa>
<ty:ref nm='lang|Object'>
</ty:ref>
</ty:isa>
</ty:type>
</rettype>
<body>
<cast>
<base>
<symbol  ty='lang|Int32' refer='param'>b</symbol>
</base>
<as>
<ty:type nm='lang|Number'>
<ty:isa>
<ty:ref nm='lang|Object'>
</ty:ref>
</ty:isa>
</ty:type>
</as>
</cast>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:ref nm='lang|Any'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Number'>
<ty:isa>
<ty:ref nm='lang|Object'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:used-type>
</ty:node-types>
</compile-unit>
