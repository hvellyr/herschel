<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://heather.eyestep.org/types'>
<def>
<class nm='Seq'>
<isa>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:type>
</isa>
</class>
</def>
<def>
<func sym='Seq|init'>
<params>
<param sym='__obj_0' type='pos'>
<type>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:type>
</rettype>
<body>
<block>
<symbol  ty='Seq&lt;&apos;T>'>__obj_0</symbol>
</block>
</body>
</func>
</def>
<def>
<class nm='Dict'>
<isa>
<ty:type nm='Dict' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='V'>
</ty:ref>
</ty:gen>
</ty:type>
</isa>
</class>
</def>
<def>
<func sym='Dict|init'>
<params>
<param sym='__obj_1' type='pos'>
<type>
<ty:type nm='Dict' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='V'>
</ty:ref>
</ty:gen>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='Dict' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='V'>
</ty:ref>
</ty:gen>
</ty:type>
</rettype>
<body>
<block>
<symbol  ty='Dict&lt;&apos;K, &apos;V>'>__obj_1</symbol>
</block>
</body>
</func>
</def>
<def>
<func sym='g'>
<rettype>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</rettype>
<body>
<block>
<let>
<vardef sym='x'>
<type>
<ty:array ind='0'>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:array>
</type>
<init>
<apply  ty='Seq&lt;lang|Int>[]'>
<symbol  ty='lambda(lang|Class&lt;&apos;T>, &apos;T, lang|Any):&apos;T[]'>lang|allocate*</symbol>
<args>
<type  ty='lang|Class&lt;Seq&lt;lang|Int>>'/>
<int ty='lang|Ordinal'>1024</int>
</args>
</apply>
</init>
</vardef>
</let>
<let>
<vardef sym='y'>
<type>
<ty:array ind='12'>
<ty:type nm='Dict' inst='t'>
<ty:gen>
<ty:ref nm='lang|String'>
</ty:ref>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:array>
</type>
</vardef>
</let>
<apply  ty='Seq&lt;lang|Int>'>
<symbol  ty='lambda(lang|Sliceable&lt;&apos;K, &apos;E>, &apos;K):&apos;E'>lang|slice</symbol>
<args>
<symbol  ty='Seq&lt;lang|Int>[]'>x</symbol>
<int ty='lang|Int'>34</int>
</args>
</apply>
</block>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='Dict' inst='t'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='V'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Ordinal'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Int'>
<ty:const k='geq'>0</ty:const>
</ty:ref>
<ty:ref nm='lang|BoundedBelow'>
</ty:ref>
<ty:ref nm='lang|Unsigned'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:array ind='0'>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:array>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Class'>
<ty:gen>
<ty:type nm='Seq' inst='t'>
<ty:gen>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:gen>
</ty:type>
</ty:gen>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos' spec='t'>
<ty:ref nm='lang|Sliceable'>
<ty:gen>
<ty:ref gen='t' nm='K'>
</ty:ref>
<ty:ref gen='t' nm='E'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:prm>
<ty:prm is='pos' spec='t'>
<ty:ref gen='t' nm='K'>
</ty:ref>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:ref gen='t' nm='E'>
</ty:ref>
</ty:ret>
</ty:fun>
</ty:used-type>
<ty:used-type>
<ty:fun nm=''>
<ty:prms>
<ty:prm is='pos' spec='t'>
<ty:ref nm='lang|Class'>
<ty:gen>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:gen>
</ty:ref>
</ty:prm>
<ty:prm is='named' key='value'>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:prm>
<ty:prm is='rest'>
<ty:ref nm='lang|Any'>
</ty:ref>
</ty:prm>
</ty:prms>
<ty:ret>
<ty:array ind='0'>
<ty:ref gen='t' nm='T'>
</ty:ref>
</ty:array>
</ty:ret>
</ty:fun>
</ty:used-type>
</ty:node-types>
</compile-unit>
