<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<vardef sym='x' alloc='shared'>
<type>
<ty:union>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Any'>
</ty:type>
</ty:union>
</type>
<init>
<str>abc</str>
</init>
</vardef>
</def>
<def>
<func sym='foo'>
<rettype>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<assign  ty='lang|String'>
<symbol  ty='&amp;(lang|String, lang|Int32, lang|Any)' refer='global' acc='shared'>x</symbol>
<str>hello world</str>
</assign>
</body>
</func>
</def>
<def>
<func sym='goo'>
<rettype>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<assign  ty='lang|Int32'>
<symbol  ty='&amp;(lang|String, lang|Int32, lang|Any)' refer='global' acc='shared'>x</symbol>
<int ty='lang|Int32'>42</int>
</assign>
</body>
</func>
</def>
<def>
<func sym='bar'>
<rettype>
<ty:union>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Any'>
</ty:type>
</ty:union>
</rettype>
<body>
<assign  ty='lang|Unspecified'>
<symbol  ty='&amp;(lang|String, lang|Int32, lang|Any)' refer='global' acc='shared'>x</symbol>
<symbol  ty='lang|Unspecified' refer='global' acc='shared'>lang|unspecified</symbol>
</assign>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Unspecified'>
<ty:isa>
<ty:ref nm='lang|Object'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:union>
<ty:type nm='lang|String'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Copyable'>
</ty:ref>
<ty:ref nm='lang|Comparable'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Int32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Integer'>
</ty:ref>
<ty:ref nm='lang|Exact'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
<ty:type nm='lang|Any'>
</ty:type>
</ty:union>
</ty:used-type>
</ty:node-types>
</compile-unit>
