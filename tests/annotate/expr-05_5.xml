<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://heather.eyestep.org/types'>
<def>
<func sym='f0'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
<param sym='b' type='pos'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</rettype>
<body>
<block>
<let>
<vardef sym='t0'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='+' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t1'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='-' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t2'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='*' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t3'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='/' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t4'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='**' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t5'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
<init>
<binary op='mod' ty='lang|Float64'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
</block>
</body>
</func>
</def>
<def>
<func sym='f1'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
<param sym='b' type='pos'>
<type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:ref nm='lang|Bool'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='t0'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='==' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t1'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='&lt;>' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t2'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='&lt;' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t3'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='>' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t4'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='>=' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t5'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='&lt;=' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t6'>
<type>
<ty:ref nm='lang|Int'>
</ty:ref>
</type>
<init>
<binary op='&lt;=>' ty='lang|Int'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t7'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='in' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float64'>b</symbol>
</binary>
</init>
</vardef>
</let>
</block>
</body>
</func>
</def>
<def>
<func sym='f4'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Float128'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
<param sym='b' type='pos'>
<type>
<ty:ref nm='lang|Any'>
</ty:ref>
</type>
</param>
</params>
<rettype>
<ty:ref nm='lang|Bool'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='t0'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='isa' ty='lang|Bool'>
<symbol  ty='lang|Float128'>a</symbol>
<symbol  ty='lang|Class&lt;lang|Int>'>lang|Int</symbol>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t1'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='isa' ty='lang|Bool'>
<symbol  ty='lang|Float128'>a</symbol>
<symbol  ty='lang|Any'>b</symbol>
</binary>
</init>
</vardef>
</let>
</block>
</body>
</func>
</def>
<def>
<func sym='f5'>
<params>
<param sym='a' type='pos'>
<type>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
<param sym='b' type='pos'>
<type>
<ty:type nm='lang|Float128'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</type>
</param>
</params>
<rettype>
<ty:ref nm='lang|Bool'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='t0'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='and' ty='lang|Bool'>
<binary op='==' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<real ty='lang|Real'>3.141500</real>
</binary>
<binary op='==' ty='lang|Bool'>
<symbol  ty='lang|Float128'>b</symbol>
<real ty='lang|Float64'>42.000010</real>
</binary>
</binary>
</init>
</vardef>
</let>
<let>
<vardef sym='t1'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<binary op='or' ty='lang|Bool'>
<binary op='==' ty='lang|Bool'>
<symbol  ty='lang|Float32'>a</symbol>
<symbol  ty='lang|Float128'>b</symbol>
</binary>
<binary op='==' ty='lang|Bool'>
<symbol  ty='lang|Float128'>b</symbol>
<symbol  ty='lang|Float32'>a</symbol>
</binary>
</binary>
</init>
</vardef>
</let>
</block>
</body>
</func>
</def>
<ty:node-types>
<ty:used-type>
<ty:ref nm='lang|Any'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Int'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Real'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Float32'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Float64'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:type nm='lang|Float128'>
<ty:isa>
<ty:seq>
<ty:ref nm='lang|Real'>
</ty:ref>
<ty:ref nm='lang|Approximate'>
</ty:ref>
<ty:ref nm='lang|Bounded'>
</ty:ref>
</ty:seq>
</ty:isa>
</ty:type>
</ty:used-type>
<ty:used-type>
<ty:ref nm='lang|Class'>
<ty:gen>
<ty:type nm='lang|Int'>
<ty:isa>
<ty:ref nm='lang|Number'>
</ty:ref>
</ty:isa>
</ty:type>
</ty:gen>
</ty:ref>
</ty:used-type>
</ty:node-types>
</compile-unit>
