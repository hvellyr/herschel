;; binary operations are possible with untyped expressions (for rapid prototyping)
def f0(a, b)
  let t0 = a + b
  let t1 = a - b
  let t2 = a * b
  let t3 = a / b
  let t4 = a ** b
  let t5 = a mod b

def f1(a, b)
  let t0 = a == b
  let t1 = a <> b
  let t2 = a < b
  let t3 = a > b
  let t4 = a >= b
  let t5 = a <= b
  let t6 = a <=> b
  let t7 = a in b

def f2(a, b)
  let t0 = a % b
  let t1 = a ++ b

def f3(a, b)
  let t0 = a AND b
  let t1 = a OR b
  let t2 = a XOR b
  let t3 = a << b
  let t4 = a >> b

def f4(a, b)
  let t0 = a isa Int
  let t1 = a isa b

def f5(a, b)
  ;; logical and/or operators requires booleans; so for Any operands this
  ;; makes explicit true comparasions necessary
  let t0 = (a == true) and (b == true)
  let t1 = (a == true) or (b == true)
