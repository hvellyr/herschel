-- test mul operator on weakly typed values

import "lang/assert.h7"

def assert-mul(a, b, r) : Bool
  assert(a * b == r)


def test-mul() : Any
  assert-mul(5, 4, 20)

  assert-mul(127, 1, 127)
  assert-mul(0, 0, 0)
  assert-mul(42, -10, -420)

  assert-mul(2147483647, 2, -2)    -- overflow
  assert-mul(-2147483647, -2147483647, 1)
  assert-mul(-2147483648, -2147483647, -2147483648)

  assert-mul(2147483647, 1, 2147483647)
  assert-mul(2147483647, -1, -2147483647)
  assert-mul(-2147483647, -1, 2147483647)

  assert-mul(2147483647l, 2, 4294967294l)


  -- 64bit
  assert-mul(512L, 512L, 262144L)
  assert-mul(0L, 0L, 0L)
  assert-mul(262144L, 262144L, 68719476736L)


  assert-mul(2147483648uL, 2uL, 4294967296uL)

  -- 16bit

  assert-mul(12s, 12s, 144s)
  assert-mul(32767s, 2s, -2s)
  assert-mul(32767s, -2s, 2s)


  -- 8bit
  assert-mul(10t, 10t, 100t)
  assert-mul(-1t, -1t, 1t)

  assert-mul(16ut, 16ut, 0ut)


  -- mixed
  assert-mul(1t, -9223372036854775808L, -9223372036854775808L)
  assert-mul(127t, 2, 254)  -- propagates to Int32

  true


def app|main()
  test-mul()

  0
