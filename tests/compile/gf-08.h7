;; test 2 spec'ed, 1 ordinary arity parameter

import "clang/types.h7"

extern ("C") {
  int putchar(int c);
}


module xi

def foo(c)
  putchar(c)
  c


def type Vehicle
def type MotorVehicle : Vehicle

def class Car : MotorVehicle { }

def class Plane : Vehicle { }

def class Bicycle : Vehicle { }

def class Harvester : MotorVehicle { }


def generic bump-into(one @ Vehicle, two @ Vehicle, intensity : Int)
  foo(3dh)
  foo(77h) foo(68h) foo(61h) foo(74h) foo(3fh) foo(10) ;; what?

def bump-into(one @ Car, two @ Bicycle, intensity : Int)
  foo(3dh)
  foo(32h) foo(6eh) foo(64h) foo(10)    ;; 2nd

def bump-into(one @ Bicycle, two @ Car, intensity : Int)
  foo(3dh)
  foo(31h) foo(73h) foo(74h) foo(10)    ;; 1st

def bump-into(one @ Harvester, two @ Car, intensity : Int)
  foo(3dh)
  foo(6dh) foo(6fh) foo(73h) foo(74h) foo(6ch) foo(79h) foo(20h)
  foo(32h) foo(6eh) foo(64h) foo(10)    ;; mostly 2nd

def bump-into(one @ Car, two @ Car, intensity : Int)
  foo(3dh)
  foo(62h) foo(6fh) foo(74h) foo(68h) foo(10) ;; both

def bump-into(one @ MotorVehicle, two @ MotorVehicle, intensity : Int)
  foo(3dh)
  foo(73h) foo(6fh) foo(6dh) foo(65h) foo(68h)
  foo(6fh) foo(77h) foo(20h)
  foo(62h) foo(6fh) foo(74h) foo(68h) foo(10) ;; somehow both


def app|main()
  let car = Car()
  let bicycle = Bicycle()
  let plane = Plane()
  let harvester = Harvester()

  car.bump-into(bicycle, 20)
  bicycle.bump-into(car, 5)
  plane.bump-into(car, 1000)
  plane.bump-into(plane, 1000)
  car.bump-into(car, 40)
  harvester.bump-into(car, 50)
  car.bump-into(harvester, 40)

  1
