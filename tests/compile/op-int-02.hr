-- test sub operator on weakly typed values

import "lang/assert.hr"

def assert-sub(a, b, r) : Bool
  assert(a - b == r)


def test-sub() : Any
  assert-sub(32, 32, 0)

  assert-sub(64u, 32u, 32u)
  assert-sub(127t, -1, 128)

  assert-sub(-9223372036854775808L, 1L, 9223372036854775807L)

  assert-sub(32767s, -32768s, -1s)
  assert-sub(-32768s, 32767s, 1s)

  assert-sub(-9223372036854775808L, 1t, 9223372036854775807L)
  assert-sub(1t, -9223372036854775808L, -9223372036854775807L)

  assert-sub(-9223372036854775808L, 1s, 9223372036854775807L)
  assert-sub(1s, -9223372036854775808L, -9223372036854775807L)

  assert-sub(-9223372036854775808L, 1, 9223372036854775807L)
  assert-sub(1, -9223372036854775808L, -9223372036854775807L)
  assert-sub(16, 32L, -16L)

  assert-sub(16t, 16, 0)
  assert-sub(127t, -16, 143)  -- propagates to Int32

  -- uumph?
  assert-sub(127t, -1t, -128t)
  assert-sub(127t, -1, 128)
  assert(-128t == -128)
  true


def app|main()
  test-sub()

  0
