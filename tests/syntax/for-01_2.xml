<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<func sym='f0'>
<rettype>
<ty:ref nm='lang|Any'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='__seq_0'>
<init>
<symbol>collection</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='i'>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='__return_1'>
<type>
<ty:union>
<ty:ref nm='lang|Any'>
</ty:ref>
<ty:ref nm='lang|Unspecified'>
</ty:ref>
</ty:union>
</type>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<while>
<test>
<if>
<test>
<apply>
<symbol>lang|end?</symbol>
<args>
<symbol>__seq_0</symbol>
</args>
</apply>
</test>
<then>
<false/>
</then>
<else>
<block>
<assign>
<symbol>i</symbol>
<apply>
<symbol>lang|next</symbol>
<args>
<symbol>__seq_0</symbol>
</args>
</apply>
</assign>
<true/>
</block>
</else>
</if>
</test>
<body>
<block>
<assign>
<symbol>__return_1</symbol>
<apply>
<symbol>outln</symbol>
<args>
<symbol>i</symbol>
</args>
</apply>
</assign>
</block>
</body>
</while>
<symbol>__return_1</symbol>
</block>
</body>
</func>
</def>
<def>
<func sym='f1'>
<rettype>
<ty:ref nm='lang|Any'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='__seq_3'>
<init>
<symbol>collection</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='i'>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='__return_4'>
<type>
<ty:union>
<ty:ref nm='lang|Any'>
</ty:ref>
<ty:ref nm='lang|Unspecified'>
</ty:ref>
</ty:union>
</type>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<while>
<test>
<if>
<test>
<apply>
<symbol>lang|end?</symbol>
<args>
<symbol>__seq_3</symbol>
</args>
</apply>
</test>
<then>
<false/>
</then>
<else>
<block>
<assign>
<symbol>i</symbol>
<apply>
<symbol>lang|next</symbol>
<args>
<symbol>__seq_3</symbol>
</args>
</apply>
</assign>
<true/>
</block>
</else>
</if>
</test>
<body>
<block>
<assign>
<symbol>__return_4</symbol>
<apply>
<symbol>outln</symbol>
<args>
<symbol>i</symbol>
</args>
</apply>
</assign>
</block>
</body>
</while>
<symbol>__return_4</symbol>
</block>
</body>
</func>
</def>
<def>
<func sym='f2'>
<rettype>
<ty:ref nm='lang|Any'>
</ty:ref>
</rettype>
<body>
<block>
<let>
<vardef sym='__seq_6'>
<init>
<symbol>collection</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='i'>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='__return_7'>
<init>
<undef/>
</init>
</vardef>
</let>
<let>
<vardef sym='__test_8'>
<type>
<ty:ref nm='lang|Bool'>
</ty:ref>
</type>
<init>
<if>
<test>
<apply>
<symbol>lang|end?</symbol>
<args>
<symbol>__seq_6</symbol>
</args>
</apply>
</test>
<then>
<false/>
</then>
<else>
<block>
<assign>
<symbol>i</symbol>
<apply>
<symbol>lang|next</symbol>
<args>
<symbol>__seq_6</symbol>
</args>
</apply>
</assign>
<true/>
</block>
</else>
</if>
</init>
</vardef>
</let>
<if>
<test>
<symbol>__test_8</symbol>
</test>
<then>
<block>
<while>
<test>
<symbol>__test_8</symbol>
</test>
<body>
<block>
<assign>
<symbol>__return_7</symbol>
<apply>
<symbol>outln</symbol>
<args>
<symbol>i</symbol>
</args>
</apply>
</assign>
<assign>
<symbol>__test_8</symbol>
<if>
<test>
<apply>
<symbol>lang|end?</symbol>
<args>
<symbol>__seq_6</symbol>
</args>
</apply>
</test>
<then>
<false/>
</then>
<else>
<block>
<assign>
<symbol>i</symbol>
<apply>
<symbol>lang|next</symbol>
<args>
<symbol>__seq_6</symbol>
</args>
</apply>
</assign>
<true/>
</block>
</else>
</if>
</assign>
</block>
</body>
</while>
<symbol>__return_7</symbol>
</block>
</then>
<else>
<false/>
</else>
</if>
</block>
</body>
</func>
</def>
<def>
<func sym='f3'>
<rettype>
<ty:ref nm='lang|Any'>
</ty:ref>
</rettype>
<body>
<block>
<block>
<let>
<vardef sym='__seq_9'>
<init>
<symbol>collection</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='i'>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<let>
<vardef sym='__return_10'>
<type>
<ty:union>
<ty:ref nm='lang|Any'>
</ty:ref>
<ty:ref nm='lang|Unspecified'>
</ty:ref>
</ty:union>
</type>
<init>
<symbol>lang|unspecified</symbol>
</init>
</vardef>
</let>
<while>
<test>
<if>
<test>
<apply>
<symbol>lang|end?</symbol>
<args>
<symbol>__seq_9</symbol>
</args>
</apply>
</test>
<then>
<false/>
</then>
<else>
<block>
<assign>
<symbol>i</symbol>
<apply>
<symbol>lang|next</symbol>
<args>
<symbol>__seq_9</symbol>
</args>
</apply>
</assign>
<true/>
</block>
</else>
</if>
</test>
<body>
<block>
<assign>
<symbol>__return_10</symbol>
<apply>
<symbol>outln</symbol>
<args>
<symbol>i</symbol>
</args>
</apply>
</assign>
</block>
</body>
</while>
<symbol>__return_10</symbol>
</block>
<false/>
</block>
</body>
</func>
</def>
</compile-unit>
