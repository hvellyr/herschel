<?xml version='1.0' encoding='utf-8'?>
<compile-unit><def><func sym='f0'><body><str>no parameters</str></body></func></def><def><func sym='f1'><params><param sym='a' type='pos'></param></params><body><str>one positional parameter</str></body></func></def><def><func sym='f2'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multiple positional parameters</str></body></func></def><def><func sym='f3'><params><param sym='a' type='pos'></param></params><body><str>one pos. parameter with type</str></body></func></def><def><func sym='f4'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multi pos. parameter with type</str></body></func></def><def><func sym='f5'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multi pos. parameter with mixed type</str></body></func></def><def><func sym='f6'><body><str>no. parameters, + returntype</str></body></func></def><def><func sym='f7'><params><param sym='a' type='pos'></param></params><body><str>one positional parameter, + returntype</str></body></func></def><def><func sym='f8'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multiple positional parameters, + returntype</str></body></func></def><def><func sym='f9'><params><param sym='a' type='pos'></param></params><body><str>one pos. parameter with type, + returntype</str></body></func></def><def><func sym='f10'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multi pos. parameter with type, + returntype</str></body></func></def><def><func sym='f11'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='pos'></param></params><body><str>multi pos. parameter with mixed type, + returntype</str></body></func></def><def><func sym='f12'><params><param sym='a' type='key' key='a'><init><int>11</int></init></param></params><body><str>one named parameter</str></body></func></def><def><func sym='f13'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param></params><body><str>one explicitly named parameter</str></body></func></def><def><func sym='f14'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param></params><body><str>one explicitly named, typed parameter</str></body></func></def><def><func sym='f15'><params><param sym='a' type='key' key='x'><init><on key='sync'><body><int>11</int></body></on></init></param></params><body><str>one explicitly named, typed parameter with complex init value</str></body></func></def><def><func sym='f16'><params><param sym='a' type='key' key='a'><init><int>11</int></init></param><param sym='b' type='key' key='b'><init><str>hello world</str></init></param><param sym='c' type='key' key='c'><init><char>32</char></init></param></params><body><str>multiple named parameters</str></body></func></def><def><func sym='f17'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param><param sym='b' type='key' key='y'><init><str>hello world</str></init></param><param sym='c' type='key' key='z'><init><char>32</char></init></param></params><body><str>multiple explicitly named parameters</str></body></func></def><def><func sym='f18'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param><param sym='b' type='key' key='y'><init><str>hello world</str></init></param><param sym='c' type='key' key='z'><init><char>32</char></init></param></params><body><str>multiple explicitly named, typed parameters</str></body></func></def><def><func sym='f19'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param><param sym='b' type='key' key='b'><init><str>hello world</str></init></param><param sym='c' type='key' key='c'><init><char>32</char></init></param></params><body><str>variations of mixed parameters</str></body></func></def><def><func sym='f19b'><params><param sym='a' type='key' key='x'><init><int>11</int></init></param><param sym='b' type='key' key='b'><init><str>hello world</str></init></param><param sym='c' type='key' key='c'><init><char>32</char></init></param></params><body><str>variations of mixed parameters</str></body></func></def><def><func sym='f19c'><params><param sym='a' type='key' key='a'><init><int>11</int></init></param><param sym='b' type='key' key='y'><init><str>hello world</str></init></param><param sym='c' type='key' key='z'><init><char>32</char></init></param></params><body><str>variations of mixed parameters</str></body></func></def><def><func sym='f20'><params><param sym='a' type='pos'></param><param sym='c' type='key' key='c'><init><str>hello world</str></init></param></params><body><str>mixed pos. and named parameters</str></body></func></def><def><func sym='f21'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='c'><init><str>hello world</str></init></param><param sym='d' type='key' key='d'><init><int>11</int></init></param></params><body><str>mixed pos. and named parameters</str></body></func></def><def><func sym='f22'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='x'><init><str>hello world</str></init></param><param sym='d' type='key' key='y'><init><int>11</int></init></param></params><body><str>mixed pos. and named parameters</str></body></func></def><def><func sym='f23'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='x'><init><str>hello world</str></init></param><param sym='d' type='key' key='y'><init><int>11</int></init></param></params><body><str>mixed pos. and named parameters</str></body></func></def><def><func sym='f30'><params><param sym='r' type='rest'></param></params><body><str>rest parameter</str></body></func></def><def><func sym='f31'><params><param sym='a' type='pos'></param><param sym='r' type='rest'></param></params><body><str>pos. + rest parameter</str></body></func></def><def><func sym='f32'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='r' type='rest'></param></params><body><str>pos. + rest parameter</str></body></func></def><def><func sym='f33'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='r' type='rest'></param></params><body><str>pos. + rest parameter</str></body></func></def><def><func sym='f34'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='c'><init><int>11</int></init></param><param sym='d' type='key' key='d'><init><char>32</char></init></param><param sym='r' type='rest'></param></params><body><str>pos., named &amp; rest parameter</str></body></func></def><def><func sym='f35'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='x'><init><int>11</int></init></param><param sym='d' type='key' key='y'><init><char>32</char></init></param><param sym='r' type='rest'></param></params><body><str>pos., named &amp; rest parameter</str></body></func></def><def><func sym='f36'><params><param sym='a' type='pos'></param><param sym='b' type='pos'></param><param sym='c' type='key' key='x'><init><int>11</int></init></param><param sym='d' type='key' key='y'><init><char>32</char></init></param><param sym='r' type='rest'></param></params><body><str>pos., named &amp; rest parameter</str></body></func></def><def><func sym='f37'><params><param sym='a' type='rest'></param></params><body><str>typed rest parameter</str></body></func></def><def><func sym='f38'><params><param sym='a' type='pos'></param><param sym='c' type='key' key='x'><init><int>11</int></init></param><param sym='r' type='rest'></param></params><body><str>mixed parameters</str></body></func></def></compile-unit>
