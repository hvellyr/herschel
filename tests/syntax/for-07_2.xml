<?xml version='1.0' encoding='utf-8'?>
<compile-unit><def><func sym='f'><rettype xmlns:ty='http://heather.eyestep.org/types'><ty:ref nm='Any'></ty:ref></rettype><body><block><let><vardef sym='count'><init><int ty='Int'>0</int></init></vardef></let><let><vardef sym='idx'><init><int ty='Int'>0</int></init></vardef></let><let><vardef sym='e'><init><apply><symbol>root</symbol><args></args></apply></init></vardef></let><let><vardef sym='n'><init><apply><symbol>names</symbol><args></args></apply></init></vardef></let><let><vardef sym='__seq_0'><init><symbol>names</symbol></init></vardef></let><let><vardef sym='name'><init><symbol>unspecified</symbol></init></vardef></let><let><vardef sym='__return_1'><init><symbol>unspecified</symbol></init></vardef></let><while><test><binary op='and'><binary op='and'><binary op='and'><binary op='and'><binary op='and'><binary op='&lt;='><symbol>count</symbol><int ty='Int'>100</int></binary><binary op='&lt;='><symbol>idx</symbol><int ty='Int'>100</int></binary></binary><binary op='&lt;>'><symbol>n</symbol><symbol>nil</symbol></binary></binary><if><test><apply><symbol>end?</symbol><args><symbol>__seq_0</symbol></args></apply></test><then><false/></then><else><block><assign><symbol>name</symbol><apply><symbol>next</symbol><args><symbol>__seq_0</symbol></args></apply></assign><true/></block></else></if></binary><apply><symbol>not</symbol><args><apply><symbol>nil?</symbol><args><symbol>e</symbol></args></apply></args></apply></binary><apply><symbol>empty?</symbol><args><symbol>name</symbol></args></apply></binary></test><body><block><assign><symbol>__return_1</symbol><apply><symbol>outln</symbol><args><symbol>count</symbol></args></apply></assign><assign><symbol>count</symbol><binary op='+'><symbol>count</symbol><int ty='Int'>2</int></binary></assign><assign><symbol>idx</symbol><binary op='+'><symbol>idx</symbol><int ty='Int'>1</int></binary></assign><assign><symbol>e</symbol><apply><symbol>cdr</symbol><args><symbol>e</symbol></args></apply></assign><assign><symbol>n</symbol><apply><symbol>cdr</symbol><args><symbol>n</symbol></args></apply></assign></block></body></while><symbol>__return_1</symbol></block></body></func></def></compile-unit>
