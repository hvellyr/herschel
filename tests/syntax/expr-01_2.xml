<?xml version='1.0' encoding='utf-8'?>
<compile-unit xmlns:ty='http://herschel.eyestep.org/types'>
<def>
<vardef sym='a'>
<init>
<binary op='+'>
<int ty='lang|Int32'>5</int>
<int ty='lang|Int32'>11</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='b'>
<init>
<binary op='-'>
<int ty='lang|Int32'>5</int>
<binary op='*'>
<int ty='lang|Int32'>11</int>
<int ty='lang|Int32'>2</int>
</binary>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='b2'>
<init>
<binary op='*'>
<binary op='+'>
<int ty='lang|Int32'>5</int>
<int ty='lang|Int32'>11</int>
</binary>
<int ty='lang|Int32'>2</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='c'>
<init>
<range>
<int ty='lang|Int32'>0</int>
<int ty='lang|Int32'>100</int>
<int ty='lang|Int32'>2</int>
</range>
</init>
</vardef>
</def>
<def>
<vardef sym='d'>
<init>
<binary op='and'>
<binary op='in'>
<int ty='lang|Int32'>1</int>
<array>
<int ty='lang|Int32'>1</int>
<int ty='lang|Int32'>2</int>
</array>
</binary>
<binary op='or'>
<binary op='isa'>
<symbol>value</symbol>
<symbol>Key</symbol>
</binary>
<binary op='>'>
<binary op='**'>
<int ty='lang|Int32'>4</int>
<int ty='lang|Int32'>4</int>
</binary>
<int ty='lang|Int32'>12</int>
</binary>
</binary>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='e'>
<init>
<binary op='+'>
<int ty='lang|Int32'>1</int>
<cast>
<base>
<int ty='lang|Int32'>2</int>
</base>
<as>
<ty:ref nm='lang|UInt32'>
</ty:ref>
</as>
</cast>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='e2'>
<init>
<cast>
<base>
<binary op='+'>
<int ty='lang|Int32'>1</int>
<int ty='lang|Int32'>2</int>
</binary>
</base>
<as>
<ty:ref nm='lang|UInt32'>
</ty:ref>
</as>
</cast>
</init>
</vardef>
</def>
<def>
<vardef sym='f'>
<init>
<binary op='%'>
<str>hello %s</str>
<array>
<str>world</str>
</array>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='g'>
<init>
<binary op='OR'>
<binary op='>>'>
<binary op='AND'>
<symbol>value1</symbol>
<int ty='lang|Int32'>65280</int>
</binary>
<int ty='lang|Int32'>8</int>
</binary>
<binary op='OR'>
<binary op='AND'>
<symbol>value2</symbol>
<int ty='lang|Int32'>255</int>
</binary>
<binary op='>>'>
<binary op='AND'>
<symbol>value3</symbol>
<int ty='lang|Int32'>16711680</int>
</binary>
<int ty='lang|Int32'>16</int>
</binary>
</binary>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='h'>
<init>
<binary op='XOR'>
<int ty='lang|Int32'>5</int>
<binary op='AND'>
<binary op='&lt;&lt;'>
<int ty='lang|Int32'>6</int>
<int ty='lang|Int32'>7</int>
</binary>
<int ty='lang|Int32'>8</int>
</binary>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='i'>
<init>
<binary op='=='>
<binary op='in'>
<int ty='lang|Int32'>5</int>
<array>
<int ty='lang|Int32'>4</int>
<int ty='lang|Int32'>4</int>
</array>
</binary>
<binary op='&lt;='>
<int ty='lang|Int32'>4</int>
<int ty='lang|Int32'>3</int>
</binary>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='i2'>
<init>
<binary op='&lt;>'>
<int ty='lang|Int32'>45</int>
<int ty='lang|Int32'>2</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='i3'>
<init>
<binary op='&lt;'>
<int ty='lang|Int32'>5</int>
<int ty='lang|Int32'>2</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='i4'>
<init>
<binary op='>='>
<symbol>a</symbol>
<int ty='lang|Int32'>2</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='i5'>
<init>
<binary op='&lt;=>'>
<symbol>a</symbol>
<symbol>b</symbol>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='k'>
<init>
<binary op='/'>
<symbol>t</symbol>
<int ty='lang|Int32'>2</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='l'>
<init>
<binary op='+'>
<binary op='mod'>
<symbol>t</symbol>
<int ty='lang|Int32'>2</int>
</binary>
<int ty='lang|Int32'>1</int>
</binary>
</init>
</vardef>
</def>
<def>
<vardef sym='x'>
<init>
<apply>
<symbol>slice</symbol>
<args>
<vector>
<int ty='lang|Int32'>2</int>
<int ty='lang|Int32'>3</int>
<int ty='lang|Int32'>5</int>
<int ty='lang|Int32'>7</int>
<int ty='lang|Int32'>11</int>
<int ty='lang|Int32'>13</int>
<int ty='lang|Int32'>17</int>
<int ty='lang|Int32'>19</int>
<int ty='lang|Int32'>23</int>
<int ty='lang|Int32'>29</int>
<int ty='lang|Int32'>31</int>
</vector>
<range>
<int ty='lang|Int32'>3</int>
<int ty='lang|Int32'>6</int>
<int ty='lang|Int32'>2</int>
</range>
</args>
</apply>
</init>
</vardef>
</def>
</compile-unit>
