;; This file is part of the herschel package
;;
;; Copyright (c) 2010-2011 Gregor Klinke
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;; - Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; - Redistributions in binary form must reproduce the above copyright
;;   notice, this list of conditions and the following disclaimer in the
;;   documentation and/or other materials provided with the distribution.
;;
;; - Neither the name of the author nor the names of other contributors may
;;   be used to endorse or promote products derived from this software
;;   without specific prior written permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


module clang ("eyestep/herschel 1.0:C")

export public (*)

import "lang/numbers.hr"


def alias int = lang|Int32
def alias char = lang|Int8
def alias short = lang|Int16
def alias long = lang|Int32
def alias unsigned-int = lang|UInt32
def alias unsigned-char = lang|UInt8
def alias unsigned-short = lang|UInt16
def alias unsigned-long = lang|UInt32

def type void
def alias float = lang|Float32
def alias double = lang|Float64

def type int*
def type char*
def type short*
def type long*
def type unsigned-int*
def type unsigned-char*
def type unsigned-short*
def type unsigned-long*
def type void*
def type float*
def type double*

def type int**
def type char**
def type short**
def type long**
def type unsigned-int**
def type unsigned-char**
def type unsigned-short**
def type unsigned-long**
def type void**
def type float**
def type double**

;; end of clang/types.hr


