-- This file is part of the herschel package
--
-- Copyright (c) 2010-2011 Gregor Klinke
-- All rights reserved.
--
-- This source code is released under the BSD License.

module lang


def compare(one @ Sliceable<Int, 'T>, two @ Sliceable<Int, 'T>) -> Int
    reify (one @ 'T[], two @ 'T[]) -> Int,
          (one @ 'T[], two @ Slice<Int, 'T>) -> Int
{
  let n = one.num-items
  if (n == two.num-items) {
    let i = 0
    let cmpval = 0
    while (i < n - 1 or cmpval <> 0) {
      cmpval = one[i] <=> two[i]
      i = i + 1
    }

    cmpval
  }
  else if (n < two.num-items)
    -1
  else
    1
}
