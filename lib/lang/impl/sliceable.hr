-- This file is part of the herschel package
--
-- Copyright (c) 2010-2011 Gregor Klinke
-- All rights reserved.
--
-- This source code is released under the BSD License.

module lang

import "lang/comparable.hr"
import "lang/sliceable.hr"


def compare(one @ Sliceable<Int, 'T>, two @ Sliceable<Int, 'T>) -> Int
    reify (one @ 'T[], two @ 'T[]) -> Int,
          (one @ 'T[], two @ Slice<Int, 'T>) -> Int
{
  let n = one.num-items
  if (n == two.num-items) {
    for (i : Int in 0 .. n - 1) {
      let cmpval = one[i] <=> two[i]
      if (cmpval <> 0)
        break(cmpval)
    }
    else
      0
  }
  else if (n < two.num-items)
    -1
  else
    1
}


-- end of impl/sliceable.hr
